public class DealOrNoDeal {
    public double totalEarning = 0; 
    private int dummyNum = 5;
    private double playerAmount = 0;  
    private double tempAmount = 0;
    
    private int prizeValue[] = {1, 2, 3, 4, 5, 6, 7, 8,
                                10, 15, 20, 30, 40, 50, 75, 100}; //these values will get shuffled along with the briefcases
    private int setAmounts[] = {1, 2, 3, 4, 5, 6, 7, 8,
                                10, 15, 20, 30, 40, 50, 75, 100}; //these values does not get shuffled. It is for remaining prize display purpose
   
    private double offer = 0;
    private int turn = 1;
    private int cases = 16;
    InputChecker newPlayer = new InputChecker();
    Bank banker = new Bank();
    BriefCase briefCase[] = new BriefCase[16];
    
     public void welcomeMessage() {
        System.out.println("\t~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*");
        System.out.println("\t~*      Welcome To Deal Or No Deal!       ~*");
        System.out.println("\t~*~*~*     Created by Carson Han    ~*~*~*~*");
        System.out.println("\t~*~*~*     Student ID: 16936349     ~*~*~*~*");
        System.out.println("\t~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*");
        System.out.println("\t~*Please select One case from the following*");
        System.out.println("\t~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*");
        System.out.println("");
    }
    
    public void casesShuffle() {
        Random ran = new Random();
        for (int x = 0; x < prizeValue.length; ++x) {
            int position = ran.nextInt(prizeValue.length);
            int placeholder = prizeValue[x];
            prizeValue[x] = prizeValue[position];
            prizeValue[position] = placeholder;
        }
    }

    public void casesAllocate() {
        casesShuffle();
        for (int y = 0; y < prizeValue.length; y++) {
            briefCase[y] = new BriefCase();
            int value = prizeValue[y];
            briefCase[y].setAmount(value);
            briefCase[y].setNumber(y);
        }
    }

    public void displayCases() {
        for (int x = 0; x < prizeValue.length; x++) {
            if (briefCase[x] == null) {           
                System.out.print("\t[X]");                           
            } else {
                System.out.print("\t[" + (briefCase[x].getNumber()+1) + "]");
            }
            if ((x+1) % 4 == 0) {
                System.out.println();
            }
        }
    }
    
    public void displayPrize() {
        for (int i = 0; i < prizeValue.length; i++){         
            if (setAmounts[i] == 0) {
                System.out.print("\t[X]");                           
            } else {
                System.out.print("\t[" + (setAmounts[i]) + "]");
            }
            if ((i+1) % 8 == 0) {
                System.out.println();
            }
        }
    }

    public void launchGame() {

        boolean gamestatus = true;
        casesAllocate();
        welcomeMessage();
        displayCases();

        int input = newPlayer.userInput();
        playerAmount = briefCase[input].getAmount();
        briefCase[input] = null;
        cases--;

        while (gamestatus == true) {
            System.out.println("\n\tRemaining Cases");
            displayCases();

            if (cases == 15 || cases == 10 || cases == 6 || cases == 3) {
                for (int dummy = dummyNum; dummy > 0; dummy--) {
                    int np = newPlayer.removeCase(dummy, briefCase);

                    tempAmount = briefCase[np].getAmount();
                    for(int i =0; i < setAmounts.length; i++){
                        if (tempAmount == setAmounts[i]){
                            setAmounts[i] = 0;
                        }
                    }
                    briefCase[np] = null;
                    cases--;
                }
                dummyNum--;
                turn++;               
                System.out.println("\n\tRemaining Cases");
                displayCases();
                System.out.println("\n\tRemaining Prize Money");
                displayPrize();
                System.out.println("");
                
                offer = banker.getOffer(briefCase, playerAmount, turn);
                gamestatus = newPlayer.gameStatus();
            } else if (cases == 0) {
                int r = newPlayer.removeCase(1, briefCase);
                briefCase[r] = null;
                gamestatus = false;
            } else if (cases == 1) {
                int r = newPlayer.removeCase(1, briefCase);
                briefCase[r] = null;
                gamestatus = false;
                cases--;
            }
        }
        gameComplete();
    }

    public void gameComplete() {
        if (cases == 0) {
            System.out.printf("\n\tYour case contains $%.2f\n", playerAmount);
            System.out.printf("\tYou've won your case with an amount of: $%.2f\n", playerAmount);
            totalEarning = playerAmount;
        } else {
            System.out.println("\n\tYou Accepted the offer of Banker");
            System.out.printf("\tYour case contains $%.2f and the banker's offer is $%.2f\n", playerAmount, offer);
            System.out.printf("\tYou've won the offer amount of $%.2f\n", offer);
            totalEarning = offer;
        }
    }
}
